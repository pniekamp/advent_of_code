import std.stdio;
import std.algorithm;
import std.scan;

fn main -> int
{
  try
  {
    var sum = 0;
    var source = std::vector<int>();

    var fin = std::file::open("day20.txt");

    for(var line : std::buffered_reader(&mut fin).lines)
    {
      var n = int(0);
      if (!std::sscanf(line, "{}", &mut n))
        std::panic("error scaning number from input '", line, "'");

      source.push_back(n);
    }

    var N = cast<int>(source.len - 1);
    var mapping = std::vector::from(std::iota(0, source.len));

    for(var i = 0; i < source.len; ++i)
    {
      var j = mapping.erase(mapping.find(i)) - mapping.begin;
      mapping.insert(mapping.begin + cast<usize>((cast<int>(j) + source[i]) % N + N) % mapping.len, i);

      //std::print(mapping.transform(|i| [source] source[i]));
    }

    var j = mapping.find(source.find(0) - source.begin) - mapping.begin;

    for(var i : [1000, 2000, 3000])
      sum += source[mapping[(j + i) % mapping.len]];

    std::print("part1: sum of the grove coordinates ", sum);

  }
  catch(std::error e)
  {
    std::panic(e);
  }

  return 0;
}
