import std.stdio;
import std.algorithm;
import std.scan;

fn main -> int
{
  try
  {
    var cursor = (0, 0);
    var polygon = std::vector<(int, int)>();

    var fin = std::file::open("day18.txt");

    for (var line : std::buffered_reader(&mut fin).lines)
    {
      var direction = ' ';
      var distance = int(0);
      var color = u32(0);

      if (!std::sscanf(line, "{} {} (#{:x})", &mut direction, &mut distance, &mut color))
        std::panic("error scaning operation from input '", line, "'");

      switch (direction)
      {
        case 'U':
          cursor.1 -= distance;

        case 'D':
          cursor.1 += distance;

        case 'L':
          cursor.0 -= distance;

        case 'R':
          cursor.0 += distance;
      }

      polygon.push_back(cursor);
    }

    var interior = 0;
    var boundary = 0;

    for (var ic = polygon.begin, var ip = polygon.end - 1; ic != polygon.end; ip = ic, ++ic)
    {
      interior += polygon[ip].0 * polygon[ic].1 - polygon[ic].0 * polygon[ip].1;
      boundary += std::absdiff(polygon[ip].0, polygon[ic].0) + std::absdiff(polygon[ip].1, polygon[ic].1);
    }

    std::print("part1: contained area ", std::abs(interior) / 2 + boundary / 2 + 1);

  }
  catch(std::error e)
  {
    std::panic(e);
  }

  return 0;
}
