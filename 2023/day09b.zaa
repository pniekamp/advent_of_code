import std.stdio;
import std.algorithm;
import std.scan;

struct sensor
{
  std::vector<std::vector<i64>> readings;

  sensor() = default;
  sensor(sensor &&) = default;
  ~sensor() = default;
}

fn main -> int
{
  try
  {
    var sensor = sensor();

    var fin = std::file::open("day09.txt");

    for (var line : std::buffered_reader(&mut fin).lines)
    {
      var readings = std::vector<i64>();

      while (!line.empty)
      {
        var reading = i64(0);
        line.drop_front!(std::sscanf(line, "{} ", &mut reading).len);

        readings.push_back(reading);
      }

      sensor.readings.push_back(readings);
    }

    var sum = i64(0);

    for (var readings : sensor.readings)
    {
      var sign = 1;
      var prediction = readings.front;

      while (!readings.empty)
      {
        readings = std::vector::from(std::adjacent<2>(readings).transform(|pair| pair.1 - pair.0));

        if (std::all_of(readings, |reading| reading == 0))
          break;

        sign *= -1;
        prediction += sign * readings.front;
      }

      sum += prediction;
    }

    std::print("part2: prediction ", sum);

  }
  catch(std::error e)
  {
    std::panic(e);
  }

  return 0;
}
