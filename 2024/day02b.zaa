import std.stdio;
import std.algorithm;
import std.range : Range;
import std.scan;

fn is_safe(Range<int> &levels) -> bool
{
  var slope = std::signum(levels[std::prev(levels.end)] - levels[levels.begin]);

  for (var i = std::next(levels.begin), var j = levels.begin; i != levels.end; ++i, ++j)
  {
    var u = (levels[i] - levels[j]) * slope;

    if (u < 1 || u > 3)
      return false;
  }

  return true;
}

fn main -> int
{
  try
  {
    var n = 0;

    var fin = std::file::open("day02.txt");

    for (var line : std::buffered_reader(&mut fin).lines)
    {
      var levels = std::vector::from(line.words.transform(|str| { var u = int(0); std::atoi(str.begin, str.end, &mut u); return u; }));

      var safe = is_safe(levels);

      for (var i = 0; i < levels.len; ++i)
        safe |= is_safe(std::chain(levels[0 .. i], levels[i + 1 .. levels.len]));

      if (safe)
        n += 1;
    }

    std::print("part2: safe dampened reports ", n);

  }
  catch(std::error e)
  {
    std::panic(e);
  }

  return 0;
}
