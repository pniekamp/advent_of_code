import std.stdio;
import std.algorithm;
import std.scan;

struct map
{
  std::vector<std::string> tiles;

  fn at(this &map, int x, int y) -> char
  {
    if (0 <= y && cast<usize>(y) < map.tiles.len && 0 <= x && cast<usize>(x) < map.tiles[cast<usize>(y)].len)
      return cast<char>(map.tiles[cast<usize>(y)][cast<usize>(x)]);

    return '#';
  }

  map() = default;
  ~map() = default;
}

fn main -> int
{
  try
  {
    var n = 0;
    var map = map();

    var fin = std::file::open("day04.txt");

    for (var line : std::buffered_reader(&mut fin).lines)
    {
      map.tiles.push_back(line);
    }

    for (var j = 0; j < cast<int>(map.tiles.len); ++j)
    {
      for (var i = 0; i < cast<int>(map.tiles[cast<usize>(j)].len); ++i)
      {
        if (map.at(i, j) == 'A')
        {
          if ((map.at(i - 1, j - 1) == 'M' && map.at(i + 1, j + 1) == 'S' || map.at(i - 1, j - 1) == 'S' && map.at(i + 1, j + 1) == 'M') &&
              (map.at(i + 1, j - 1) == 'M' && map.at(i - 1, j + 1) == 'S' || map.at(i + 1, j - 1) == 'S' && map.at(i - 1, j + 1) == 'M'))
            n += 1;
        }
      }
    }

    std::print("part2: x-mas found ", n);

  }
  catch(std::error e)
  {
    std::panic(e);
  }

  return 0;
}
